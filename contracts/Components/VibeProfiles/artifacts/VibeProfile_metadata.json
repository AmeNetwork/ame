{
	"compiler": {
		"version": "0.8.22+commit.4fc1097e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "_response",
						"type": "bytes"
					}
				],
				"name": "Response",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "string",
						"name": "_handle",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "_nickname",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "_avatar",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "_profile",
						"type": "string"
					}
				],
				"name": "UpdateProfile",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_methodName",
						"type": "string"
					},
					{
						"internalType": "bytes",
						"name": "_methodReq",
						"type": "bytes"
					}
				],
				"name": "get",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_methodName",
						"type": "string"
					}
				],
				"name": "getMethodReqAndRes",
				"outputs": [
					{
						"internalType": "enum Types.Type[]",
						"name": "",
						"type": "uint8[]"
					},
					{
						"internalType": "enum Types.Type[]",
						"name": "",
						"type": "uint8[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum IComponent.MethodTypes",
						"name": "_methodTypes",
						"type": "uint8"
					}
				],
				"name": "getMethods",
				"outputs": [
					{
						"internalType": "string[]",
						"name": "",
						"type": "string[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "str",
						"type": "string"
					}
				],
				"name": "isEmptyString",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "str",
						"type": "string"
					}
				],
				"name": "isValidString",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "options",
				"outputs": [
					{
						"internalType": "enum IComponent.MethodTypes[]",
						"name": "",
						"type": "uint8[]"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_methodName",
						"type": "string"
					},
					{
						"internalType": "bytes",
						"name": "_methodReq",
						"type": "bytes"
					}
				],
				"name": "post",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_methodName",
						"type": "string"
					},
					{
						"internalType": "bytes",
						"name": "_methodReq",
						"type": "bytes"
					}
				],
				"name": "put",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "str",
						"type": "string"
					}
				],
				"name": "toLower",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"Response(bytes)": {
					"params": {
						"_response": "is the response value of the post request or put request."
					}
				}
			},
			"kind": "dev",
			"methods": {
				"get(string,bytes)": {
					"params": {
						"_methodName": "is the method name.",
						"_methodReq": "is the method type."
					},
					"returns": {
						"_0": "The response to the get request."
					}
				},
				"getMethodReqAndRes(string)": {
					"params": {
						"_methodName": "is the method name."
					},
					"returns": {
						"_0": "Data types of request parameters and return parameters."
					}
				},
				"getMethods(uint8)": {
					"params": {
						"_methodTypes": "is the request method type."
					},
					"returns": {
						"_0": "Method names."
					}
				},
				"options()": {
					"returns": {
						"_0": "Method types."
					}
				},
				"post(string,bytes)": {
					"params": {
						"_methodName": "is the method name.",
						"_methodReq": "is the method type."
					},
					"returns": {
						"_0": "The response to the post request."
					}
				},
				"put(string,bytes)": {
					"params": {
						"_methodName": "is the method name.",
						"_methodReq": "is the method type."
					},
					"returns": {
						"_0": "The response to the put request."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"events": {
				"Response(bytes)": {
					"notice": "Response data event."
				}
			},
			"kind": "user",
			"methods": {
				"get(string,bytes)": {
					"notice": "Request the contract to retrieve records."
				},
				"getMethodReqAndRes(string)": {
					"notice": "Get the data types of request parameters and return parameters based on the requested method name."
				},
				"getMethods(uint8)": {
					"notice": "Get method names based on request method type."
				},
				"options()": {
					"notice": "Supported request method types."
				},
				"post(string,bytes)": {
					"notice": "Request the contract to create a new record."
				},
				"put(string,bytes)": {
					"notice": "Request the contract to update a record."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/AmeComponents/VibeProfiles/VibeProfile.sol": "VibeProfile"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Ame/IComponent.sol": {
			"keccak256": "0x81584010ef0467be52a23ef30c544aa5c2c2eb3f30b823056b9d6006e8014a4d",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://c9a34e75e2c25a5522bee32ce1e00cd38573e5690a9ee66ab37109537e3c8450",
				"dweb:/ipfs/QmT7BK7xgG7kmCzPBi5PqPeSJVtfWbYmq8Wx1RVSufMFDw"
			]
		},
		"contracts/Ame/Types.sol": {
			"keccak256": "0x38ec738b0db686597d0f352bbf9fc9fa57af170bd4be36d75d7ca9768e5b6aa7",
			"license": "CC0-1.0",
			"urls": [
				"bzz-raw://545d7561acf274e7787dff605304e7c3f352fabf9e0103b6db8bd5b408482026",
				"dweb:/ipfs/QmXpT5LS3Lt7rqSbcP7tDTZ7Nfd786piQ6bxdq64ji1isX"
			]
		},
		"contracts/Ame/lib/Base64.sol": {
			"keccak256": "0xb02c09206dc1b8561087ead0960b558946209e356146c43d05f835417b2ab904",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://e462985c874b9268eca2ce20fde01a8579942ec67edd48919dc65f8af8ccdd61",
				"dweb:/ipfs/QmRw7TdWJFpryd5D49J4S3HwwYbwPZtLdKR11NEW4QfJB2"
			]
		},
		"contracts/Ame/lib/Strings.sol": {
			"keccak256": "0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d",
			"license": "MIT",
			"urls": [
				"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e",
				"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7"
			]
		},
		"contracts/AmeComponents/VibeProfiles/VibeProfile.sol": {
			"keccak256": "0xcb0fefa168afa4c4e6b02a4cdc42a39c477c7ff975a4b4b7583b087a68a8621a",
			"license": "MIT",
			"urls": [
				"bzz-raw://6fd95b390ac7e5b32228c74273e2c3e5451c0eec9acdbc2e448cbd0e6fa405bd",
				"dweb:/ipfs/QmWCBgMueY15zVqTwQNhutMnbTsKgMhVvzdjBjEGErAoP9"
			]
		}
	},
	"version": 1
}